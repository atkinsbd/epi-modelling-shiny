shiny::runApp('Dropbox/MIBTP/MIBTPApp')
runApp('Dropbox/MIBTP/MIBTPApp')
runApp('Dropbox/MIBTP/MIBTPApp')
shiny::runApp('Dropbox/MIBTP/MIBTPApp')
SIR.model <- function(t, x, parameters) {
S <- x[1]
I <- x[2]
R <- x[3]
with( as.list(parameters), {
dS <- -beta*S*I
dI <- beta*S*I - gamma*I
dR <- gamma*I
res <- c(dS, dI, dR)
list(res)
}
)
}
pars <- list(beta = 0.4, gamma = 1/5)
times <- seq(0, length, length/1000)
init <- c(S = 0.995, I = 0.005, R = 0.0)
times <- seq(0, 50, 50/1000)
init <- c(S = 0.995, I = 0.005, R = 0.0)
out <- lsoda(func = SIR.model, y = init, parms = pars, times = times)
plot(out$time, out$I, type = 'p', col = 'red', lwd = 3)
View(out)
out <- as.data.frame(out)
out <- lsoda(func = SIR.model, y = init, parms = pars, times = times)
plot(out$time, out$I, type = 'p', col = 'red', lwd = 3)
out <- as.data.frame(out)
plot(out$time, out$I, type = 'p', col = 'red', lwd = 3)
times <- seq(0, 50, 50/1)
init <- c(S = 0.995, I = 0.005, R = 0.0)
out <- lsoda(func = SIR.model, y = init, parms = pars, times = times)
out <- as.data.frame(out)
plot(out$time, out$I, type = 'p', col = 'red', lwd = 3)
times <- seq(0, 50, 50/50)
init <- c(S = 0.995, I = 0.005, R = 0.0)
out <- lsoda(func = SIR.model, y = init, parms = pars, times = times)
out <- as.data.frame(out)
plot(out$time, out$I, type = 'p', col = 'red', lwd = 3)
times <- seq(0, 60, 1)
init <- c(S = 0.995, I = 0.005, R = 0.0)
out <- lsoda(func = SIR.model, y = init, parms = pars, times = times)
out <- as.data.frame(out)
plot(out$time, out$I, type = 'p', col = 'red', lwd = 3)
lines(out$time, out$I, col = 'red', lwd = 1)
help(rbinom)
rbinom(1,10,0.5)
rbinom(1,c(10,20,30),0.5)
rbinom(1,c(10,20,30),0.5)
Pr <- 0.9
Pm <- 0.1
Irep <- c()
for (i in 1:length(out$I)){
Irep[i] <- rbinom(1,out$I[i],Pr) + rbinom(1,out$S[i]+out$R[i],Pm)
}
warnings()
help(round)
Irep <- c()
for (i in 1:length(out$I)){
Irep[i] <- rbinom(1,round(out$I[i]),Pr) + rbinom(1,round(out$S[i]+out$R[i]),Pm)
}
plot(out$time, Irep, type = 'p', col = 'red', lwd = 3)
lines(out$time, Irep, col = 'red', lwd = 1)
SIR.model <- function(t, x, parameters) {
S <- x[1]
I <- x[2]
R <- x[3]
N <- S + I + R
with( as.list(parameters), {
dS <- -beta*S*I/N
dI <- beta*S*I/N - gamma*I
dR <- gamma*I
res <- c(dS, dI, dR)
list(res)
}
)
}
pars <- list(beta = 0.4, gamma = 1/5)
times <- seq(0, 60, 1)
init <- c(S = 995, I = 5, R = 0)
out <- lsoda(func = SIR.model, y = init, parms = pars, times = times)
out <- as.data.frame(out)
plot(out$time, out$I, type = 'p', col = 'red', lwd = 3)
lines(out$time, out$I, col = 'red', lwd = 1)
Pr <- 0.9
Pm <- 0.1
Irep <- c()
for (i in 1:length(out$I)){
Irep[i] <- rbinom(1,round(out$I[i]),Pr) + rbinom(1,round(out$S[i]+out$R[i]),Pm)
}
plot(out$time, Irep, type = 'p', col = 'red', lwd = 3)
lines(out$time, Irep, col = 'red', lwd = 1)
runApp('Dropbox/MIBTP/MIBTPApp')
deployApp()
library(rsconnect)
deployApp()
setwd("~/Dropbox/MIBTP/MIBTPApp")
library(rsconnect)
deployApp()
